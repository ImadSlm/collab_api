services:
  db:
    image: mariadb:latest
    environment:
      - MYSQL_ROOT_PASSWORD=db_root_password
      - MYSQL_DATABASE=db_database
      - MYSQL_USER=db_username
      - MYSQL_PASSWORD=db_password
    ports:
      - "3341:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - ./initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    secrets:
      - db_password
      - db_app_password
      - db_username
      - db_app_username
      - db_database
      - db_app_database
      - db_host
      - db_app_host
      - db_root_password
  app:
    # image : imadslm/collab_api-app:latest # DÃ©commenter pour faire tourner l'api en local, et commenter le build
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      DB_DATABASE: db_app_database
      DB_USERNAME: db_app_username
      DB_PASSWORD: db_app_password
      DB_HOST: db_app_host
    healthcheck:
      test: curl --fail http://localhost:3000/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
        restart: true
    secrets:
      - db_password
      - db_app_password
      - db_username
      - db_app_username
      - db_database
      - db_app_database
      - db_host
      - db_app_host

secrets:
  db_password:
    file: ./secrets/db_password.txt
  db_app_password:
    file: ./secrets/db_app_password.txt
  db_username:
    file: ./secrets/db_username.txt
  db_app_username:
    file: ./secrets/db_app_username.txt
  db_database:
    file: ./secrets/db_database.txt
  db_app_database:
    file: ./secrets/db_app_database.txt
  db_host:
    file: ./secrets/db_host.txt
  db_app_host:
    file: ./secrets/db_app_host.txt
  db_root_password:
    file: ./secrets/db_root_password.txt
volumes:
  db_data: