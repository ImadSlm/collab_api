name: CI/CD collab_api

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Start Docker
        run: sudo systemctl start docker

      - name: Vérifier les conteneurs
        run: docker ps

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Installation des dépendances
        run: npm install

      - name: Lancer les tests
        env:
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: npm run test

      - name: Construire l'image Docker
        run: docker build -t collab_api-app .

      - name: Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pousser l'image Docker
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/collab_api-app:latest

  # sonarqube:
  #   name: SonarQube
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: SonarQube Scan
  #       uses: SonarSource/sonarqube-scan-action@v4.1.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONARTOKEN }}