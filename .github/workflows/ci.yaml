name: CI/CD collab_api

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      testdb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: toto
          MYSQL_DATABASE: dtc
          MYSQL_PASSWORD: toto
        ports:
          - 3341:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    # - name: Log environment variables
    #   run: |
    #     echo "DB_DATABASE: ${{ secrets.DB_DATABASE }}"
    #     echo "DB_USERNAME: ${{ secrets.DB_USERNAME }}"
    #     echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
    #     echo "DB_HOST: ${{ secrets.DB_HOST }}"

    - name: Run tests
      env:
        DB_APP_DATABASE: "dtc"
        DB_APP_USERNAME: "root"
        DB_APP_PASSWORD: "toto"
        DB_APP_HOST: localhost
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      run: npm run test

    - name: Start server
      run: node server.js &
      env:
        DB_APP_DATABASE: "dtc"
        DB_APP_USERNAME: "root"
        DB_APP_PASSWORD: "toto"
        DB_APP_HOST: localhost
        JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
        JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}


    - name: Install Newman
      run: npm install -g newman

    - name: Run Postman Collection
      run: newman run tests/postman/collabdb.postman_collection.json
    
    - name: Stop server
      run: pkill node


  docker:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/collab_api-app:latest
  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARTOKEN }}