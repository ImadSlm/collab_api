apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml -o k8s/
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.yaml -o k8s/
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: DB_DATABASE
              value: db_app_database
            - name: DB_HOST
              value: db_app_host
            - name: DB_PASSWORD
              value: db_app_password
            - name: DB_USERNAME
              value: db_app_username
          image: app
          livenessProbe:
            exec:
              command:
                - curl --fail http://localhost:3000/ || exit 1
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 40
            timeoutSeconds: 30
          name: app
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /run/secrets
              name: db-password
              subPath: db-password
            - mountPath: /run/secrets
              name: db-app-password
              subPath: db-app-password
            - mountPath: /run/secrets
              name: db-username
              subPath: db-username
            - mountPath: /run/secrets
              name: db-app-username
              subPath: db-app-username
            - mountPath: /run/secrets
              name: db-database
              subPath: db-database
            - mountPath: /run/secrets
              name: db-app-database
              subPath: db-app-database
            - mountPath: /run/secrets
              name: db-host
              subPath: db-host
            - mountPath: /run/secrets
              name: db-app-host
              subPath: db-app-host
      restartPolicy: Always
      volumes:
        - name: db-password
          secret:
            items:
              - key: db-password
                path: db-password
            secretName: db-password
        - name: db-app-password
          secret:
            items:
              - key: db-app-password
                path: db-app-password
            secretName: db-app-password
        - name: db-username
          secret:
            items:
              - key: db-username
                path: db-username
            secretName: db-username
        - name: db-app-username
          secret:
            items:
              - key: db-app-username
                path: db-app-username
            secretName: db-app-username
        - name: db-database
          secret:
            items:
              - key: db-database
                path: db-database
            secretName: db-database
        - name: db-app-database
          secret:
            items:
              - key: db-app-database
                path: db-app-database
            secretName: db-app-database
        - name: db-host
          secret:
            items:
              - key: db-host
                path: db-host
            secretName: db-host
        - name: db-app-host
          secret:
            items:
              - key: db-app-host
                path: db-app-host
            secretName: db-app-host
